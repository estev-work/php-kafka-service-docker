version: "3.8"

services:
  kafka-gen:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    hostname: kafka-gen
    container_name: kafka-gen
    volumes:
      - ./kafka/scripts/create_cluster_id.sh:/tmp/create_cluster_id.sh
      - ./kafka/clusterID:/tmp/clusterID
    command: "bash -c '/tmp/create_cluster_id.sh'"
    networks:
      - app-network


  kafka1:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    hostname: kafka1
    container_name: kafka1
    ports:
      - "39092:39092"
    environment:
      KAFKA_LISTENERS: BROKER://kafka1:19092,EXTERNAL://kafka1:39092,CONTROLLER://kafka1:9093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka1:19092,EXTERNAL://kafka1:39092
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: 'controller,broker'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093'
      KAFKA_METADATA_LOG_SEGMENT_MS: 15000
      KAFKA_METADATA_MAX_RETENTION_MS: 1200000
      KAFKA_METADATA_LOG_MAX_RECORD_BYTES_BETWEEN_SNAPSHOTS: 2800
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_NUM_PARTITIONS: 10
    volumes:
      - kafka1-data:/var/lib/kafka/data
      - ./kafka/scripts/update_run.sh:/tmp/update_run.sh
      - ./kafka/clusterID:/tmp/clusterID
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:19092
    depends_on:
      - kafka1
    networks:
      - app-network

volumes:
  kafka1-data:
networks:
  app-network:
    driver: bridge